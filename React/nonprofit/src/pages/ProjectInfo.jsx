import React, { useState, useEffect } from 'react';
import { useParams } from 'react-router-dom';
import ReactMarkdown from 'react-markdown';
import projectData from './projects.json';

const ProjectInfo = () => {
  const { projectId } = useParams();
  const project = projectData['projects'].find((p) => p.id === projectId);
  
  // State to hold the fetched markdown content
  const [markdownContent, setMarkdownContent] = useState('');
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  useEffect(() => {
    // Reset states
    setLoading(true);
    setError(null);
    setMarkdownContent(''); // Clear previous content

    if (!project || !project.markdown) {
      setError(new Error('No project or markdown path found for this ID.'));
      setLoading(false);
      return;
    }

    // Fetch the markdown file
    fetch(project.markdown)
      .then(response => {
        if (!response.ok) {
          // If the response is not OK (e.g., 404), throw an error
          throw new Error(`Failed to fetch markdown: ${response.statusText} (${response.status})`);
        }
        return response.text(); // Get the response as plain text
      })
      .then(text => {
        setMarkdownContent(text); // Set the markdown content
        setLoading(false); // Set loading to false
      })
      .catch(err => {
        console.error("Error fetching markdown:", err);
        setError(err); // Store the error
        setLoading(false); // Set loading to false
      });
  }, [project]);

  const styles = `
    .content-projectinfo {
        background-color: #fff;
        padding: 40px;
        border-radius: 12px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        width: 100%;
        max-width: 600px;
        margin: 40px auto;
        color: #333;
    }

    /* Styles for elements directly within content-projectinfo or generated by ReactMarkdown */
    .content-projectinfo h1,
    .content-projectinfo h2,
    .content-projectinfo h3,
    .content-projectinfo h4,
    .content-projectinfo h5,
    .content-projectinfo h6 {
        text-align: center; /* Apply to all markdown headings */
        margin-bottom: 30px;
        margin-top: 20px; /* Add some top margin for headings */
    }

    .content-projectinfo p {
        font-size: 1.1rem;
        line-height: 1.6;
        margin-bottom: 1em; /* Add some spacing between paragraphs */
    }

    .content-projectinfo a {
        color: #63b3ed; /* Keep link color for markdown links */
        text-decoration: none;
        transition: color 0.3s ease;
    }

    .content-projectinfo a:hover {
        color: #4299e1;
    }

    /* Style for the Contact Us link specifically if it's the only one you want styled like a button */
    .content-projectinfo p a[href="/contact"] {
        display: inline-block;
        margin-top: 20px;
        background-color: #63b3ed;
        color: white;
        padding: 12px 24px;
        text-decoration: none;
        border-radius: 5px;
        transition: background-color 0.3s ease;
        text-align: center;
    }

    .content-projectinfo p a[href="/contact"]:hover {
        background-color: #4299e1;
    }

    .content-projectinfo strong {
        font-weight: bold; /* Ensure bold text is actually bold */
    }

    .content-projectinfo em {
        font-style: italic; /* Ensure italic text is actually italic */
    }

    .content-projectinfo hr {
        border: 0;
        height: 1px;
        background: #ccc;
        margin: 40px 0;
    }

    .centered-image {
      display: block; /* Essential for margin: auto to work */
      margin-left: auto;
      margin-right: auto;
      /* Optional: Set a max-width for responsiveness */
      max-width: 100%;
      height: auto; /* Maintain aspect ratio */
    }
  `;

  if (!project) {
    return (
      <>
        <style>{styles}</style>
        <div className="content-projectinfo">
          <h1>Project Not Found</h1>
          <p>The requested project could not be found.</p>
        </div>
      </>
    );
  }

  return (
    <>
      <style>{styles}</style>
      <div className="content-projectinfo">
        {loading ? (<h1></h1>):
        markdownContent != ''? (
          <ReactMarkdown 
            components={{
              img: ({ node, ...props }) => (
                <img {...props} className="centered-image" />
              ),
              a: ({ node, ...props }) => (
                  <a style={{ textAlign: 'center' }} className="submit-button" {...props} />
              ),
              p: ({ node, ...props }) => (
                  <p style={{ textAlign: 'center' }} {...props} />
              ),
            }}
          >{markdownContent}</ReactMarkdown>
          ) : (
          <>
            <h1>{project['name']}</h1>
            <p>{project['description']}</p>
          </>
        )
      }
      </div>
    </>
  );
};

export default ProjectInfo;